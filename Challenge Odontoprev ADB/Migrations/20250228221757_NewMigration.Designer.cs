// <auto-generated />
using System;
using Challenge_Odontoprev_ADB.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Challenge_Odontoprev_ADB.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250228221757_NewMigration")]
    partial class NewMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Challenge_Odontoprev_ADB.Models.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address_City")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Address_State")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Address_Street")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("AppointmentReason")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("DoctorId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PatientId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("TreatmentId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.HasIndex("TreatmentId");

                    b.ToTable("OdonPrev_Appointment");
                });

            modelBuilder.Entity("Challenge_Odontoprev_ADB.Models.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CRM")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DoctorName");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DoctorPhone");

                    b.Property<int>("Speciality")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.ToTable("OdonPrev_Doctor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CRM = "123456-78/SP",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5379),
                            Name = "Dr. João Silva",
                            Phone = "(11) 1234-5678",
                            Speciality = 0
                        },
                        new
                        {
                            Id = 2,
                            CRM = "234567-89/MG",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5411),
                            Name = "Dra. Maria Oliveira",
                            Phone = "(11) 2345-6789",
                            Speciality = 8
                        },
                        new
                        {
                            Id = 3,
                            CRM = "345678-91/SP",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5414),
                            Name = "Dr. Paulo Lima",
                            Phone = "(11) 34567-8910",
                            Speciality = 9
                        },
                        new
                        {
                            Id = 4,
                            CRM = "456789-12/SP",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5416),
                            Name = "Dra. Ana Costa",
                            Phone = "(11) 3567-8910",
                            Speciality = 1
                        },
                        new
                        {
                            Id = 5,
                            CRM = "567890-23/MG",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5419),
                            Name = "Dr. Gabriel Souza",
                            Phone = "(11) 4678-9012",
                            Speciality = 2
                        },
                        new
                        {
                            Id = 6,
                            CRM = "678901-34/RJ",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5422),
                            Name = "Dra. Carla Fernandes",
                            Phone = "(11) 5789-0123",
                            Speciality = 5
                        },
                        new
                        {
                            Id = 7,
                            CRM = "789012-45/SP",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5424),
                            Name = "Dr. Ricardo Costa",
                            Phone = "(11) 6890-1234",
                            Speciality = 4
                        },
                        new
                        {
                            Id = 8,
                            CRM = "890123-56/MG",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5427),
                            Name = "Dr. Felipe Martins",
                            Phone = "(11) 7901-2345",
                            Speciality = 6
                        },
                        new
                        {
                            Id = 9,
                            CRM = "901234-67/SP",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5429),
                            Name = "Dra. Juliana Pereira",
                            Phone = "(11) 8912-3456",
                            Speciality = 3
                        },
                        new
                        {
                            Id = 10,
                            CRM = "123456-78/RJ",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5432),
                            Name = "Dr. Marcos Oliveira",
                            Phone = "(11) 9123-4567",
                            Speciality = 11
                        });
                });

            modelBuilder.Entity("Challenge_Odontoprev_ADB.Models.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TIMESTAMP");

                    b.Property<int>("HealthCard")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PatientName");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PatientPhone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.ToTable("OdonPrev_Patient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "123.456.789-00",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5789),
                            DateOfBirth = new DateTime(1987, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HealthCard = 12345,
                            Name = "Lucas Pereira",
                            Phone = "(11) 98765-4321"
                        },
                        new
                        {
                            Id = 2,
                            CPF = "234.555.779-20",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5802),
                            DateOfBirth = new DateTime(2000, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HealthCard = 22365,
                            Name = "Miguel Alves",
                            Phone = "(11) 9455-4771"
                        },
                        new
                        {
                            Id = 3,
                            CPF = "321.456.665-12",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5807),
                            DateOfBirth = new DateTime(1998, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HealthCard = 87745,
                            Name = "Rafael Cardoso",
                            Phone = "(11) 92775-5378"
                        },
                        new
                        {
                            Id = 4,
                            CPF = "432.123.567-89",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5809),
                            DateOfBirth = new DateTime(1995, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HealthCard = 33565,
                            Name = "Beatriz Silva",
                            Phone = "(11) 92928-5747"
                        },
                        new
                        {
                            Id = 5,
                            CPF = "543.876.987-10",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5812),
                            DateOfBirth = new DateTime(1989, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HealthCard = 77345,
                            Name = "Daniel Costa",
                            Phone = "(11) 93718-9223"
                        },
                        new
                        {
                            Id = 6,
                            CPF = "654.789.876-34",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5815),
                            DateOfBirth = new DateTime(2001, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HealthCard = 12943,
                            Name = "Fernanda Gomes",
                            Phone = "(11) 94576-5348"
                        },
                        new
                        {
                            Id = 7,
                            CPF = "765.432.098-76",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5818),
                            DateOfBirth = new DateTime(1990, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HealthCard = 34985,
                            Name = "João Silva",
                            Phone = "(11) 91234-7645"
                        },
                        new
                        {
                            Id = 8,
                            CPF = "876.543.210-21",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5821),
                            DateOfBirth = new DateTime(1992, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HealthCard = 22345,
                            Name = "Carla Oliveira",
                            Phone = "(11) 92347-8823"
                        },
                        new
                        {
                            Id = 9,
                            CPF = "987.654.321-32",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5824),
                            DateOfBirth = new DateTime(1985, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HealthCard = 66782,
                            Name = "Paulo Santos",
                            Phone = "(11) 93452-7123"
                        },
                        new
                        {
                            Id = 10,
                            CPF = "109.876.543-21",
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5827),
                            DateOfBirth = new DateTime(1997, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HealthCard = 99877,
                            Name = "Larissa Pereira",
                            Phone = "(11) 93467-5432"
                        });
                });

            modelBuilder.Entity("Challenge_Odontoprev_ADB.Models.Entities.Treatment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Cost")
                        .HasColumnType("BINARY_FLOAT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("ProcedureDescription")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("ProcedureType")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.ToTable("OdonPrev_Treatment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 200f,
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5889),
                            ProcedureDescription = "Limpeza dental completa",
                            ProcedureType = 0
                        },
                        new
                        {
                            Id = 2,
                            Cost = 350f,
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5894),
                            ProcedureDescription = "Prenchimento dentário",
                            ProcedureType = 1
                        },
                        new
                        {
                            Id = 3,
                            Cost = 500f,
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5897),
                            ProcedureType = 11
                        },
                        new
                        {
                            Id = 4,
                            Cost = 250f,
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5899),
                            ProcedureDescription = "Extração de dente",
                            ProcedureType = 2
                        },
                        new
                        {
                            Id = 5,
                            Cost = 450f,
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5901),
                            ProcedureDescription = "Canal radicular",
                            ProcedureType = 3
                        },
                        new
                        {
                            Id = 6,
                            Cost = 700f,
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5904),
                            ProcedureDescription = "Coroa dentária",
                            ProcedureType = 4
                        },
                        new
                        {
                            Id = 7,
                            Cost = 800f,
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5906),
                            ProcedureDescription = "Prótese dentária",
                            ProcedureType = 5
                        },
                        new
                        {
                            Id = 8,
                            Cost = 1200f,
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5908),
                            ProcedureDescription = "Implante dentário",
                            ProcedureType = 6
                        },
                        new
                        {
                            Id = 9,
                            Cost = 1500f,
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5911),
                            ProcedureDescription = "Tratamento ortodôntico",
                            ProcedureType = 7
                        },
                        new
                        {
                            Id = 10,
                            Cost = 400f,
                            CreatedAt = new DateTime(2025, 2, 28, 19, 17, 56, 58, DateTimeKind.Local).AddTicks(5913),
                            ProcedureDescription = "Tratamento periodontal",
                            ProcedureType = 8
                        });
                });

            modelBuilder.Entity("Challenge_Odontoprev_ADB.Models.Entities.Appointment", b =>
                {
                    b.HasOne("Challenge_Odontoprev_ADB.Models.Entities.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Challenge_Odontoprev_ADB.Models.Entities.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Challenge_Odontoprev_ADB.Models.Entities.Treatment", "Treatment")
                        .WithMany("Appointments")
                        .HasForeignKey("TreatmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");

                    b.Navigation("Treatment");
                });

            modelBuilder.Entity("Challenge_Odontoprev_ADB.Models.Entities.Doctor", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Challenge_Odontoprev_ADB.Models.Entities.Patient", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Challenge_Odontoprev_ADB.Models.Entities.Treatment", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
