// <auto-generated />
using System;
using Challenge_Odontoprev_ADB.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Challenge_Odontoprev_ADB.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Challenge_Odontoprev_ADB.Models.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AppointmentReason")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("DoctorId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PatientId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("OdonPrev_Appointment");
                });

            modelBuilder.Entity("Challenge_Odontoprev_ADB.Models.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CRM")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DoctorName");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DoctorPhone");

                    b.Property<int>("Speciality")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.ToTable("OdonPrevDoctor");
                });

            modelBuilder.Entity("Challenge_Odontoprev_ADB.Models.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("HealthCard")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PatientName");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PatientPhone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.ToTable("OdonPrev_Patient");
                });

            modelBuilder.Entity("Challenge_Odontoprev_ADB.Models.Entities.Treatment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("ProcedureDescription")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("ProcedureType")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.ToTable("OdonPrev_Treatment");
                });

            modelBuilder.Entity("Challenge_Odontoprev_ADB.Models.Entities.Appointment", b =>
                {
                    b.HasOne("Challenge_Odontoprev_ADB.Models.Entities.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Challenge_Odontoprev_ADB.Models.Entities.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Challenge_Odontoprev_ADB.Models.Entities.ValueObjects.ValueLocationAddress", "Address", b1 =>
                        {
                            b1.Property<int>("AppointmentId")
                                .HasColumnType("NUMBER(10)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("NVARCHAR2(50)")
                                .HasColumnName("City");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("NVARCHAR2(50)")
                                .HasColumnName("State");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("NVARCHAR2(100)")
                                .HasColumnName("Street");

                            b1.HasKey("AppointmentId");

                            b1.ToTable("OdonPrev_Appointment");

                            b1.WithOwner()
                                .HasForeignKey("AppointmentId");
                        });

                    b.OwnsOne("Challenge_Odontoprev_ADB.Models.Entities.ValueObjects.ValueAppointmentDate", "AppointmentDate", b1 =>
                        {
                            b1.Property<int>("AppointmentId")
                                .HasColumnType("NUMBER(10)");

                            b1.Property<DateTime>("Date")
                                .HasColumnType("TIMESTAMP(7)");

                            b1.HasKey("AppointmentId");

                            b1.ToTable("OdonPrev_Appointment");

                            b1.WithOwner()
                                .HasForeignKey("AppointmentId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("AppointmentDate")
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Challenge_Odontoprev_ADB.Models.Entities.Patient", b =>
                {
                    b.OwnsOne("Challenge_Odontoprev_ADB.Models.Entities.ValueObjects.ValueLocationAddress", "Address", b1 =>
                        {
                            b1.Property<int>("PatientId")
                                .HasColumnType("NUMBER(10)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("NVARCHAR2(2000)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("NVARCHAR2(2000)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("NVARCHAR2(2000)");

                            b1.HasKey("PatientId");

                            b1.ToTable("OdonPrev_Patient");

                            b1.WithOwner()
                                .HasForeignKey("PatientId");
                        });

                    b.OwnsOne("Challenge_Odontoprev_ADB.Models.Entities.ValueObjects.ValueDateOfBirth", "DateOfBirth", b1 =>
                        {
                            b1.Property<int>("PatientId")
                                .HasColumnType("NUMBER(10)");

                            b1.Property<DateTime>("Date")
                                .HasColumnType("TIMESTAMP(7)");

                            b1.HasKey("PatientId");

                            b1.ToTable("OdonPrev_Patient");

                            b1.WithOwner()
                                .HasForeignKey("PatientId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("DateOfBirth")
                        .IsRequired();
                });

            modelBuilder.Entity("Challenge_Odontoprev_ADB.Models.Entities.Treatment", b =>
                {
                    b.HasOne("Challenge_Odontoprev_ADB.Models.Entities.Appointment", "Appointment")
                        .WithMany("Treatments")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Challenge_Odontoprev_ADB.Models.Entities.ValueObjects.ValueCost", "Cost", b1 =>
                        {
                            b1.Property<int>("TreatmentId")
                                .HasColumnType("NUMBER(10)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Cost");

                            b1.HasKey("TreatmentId");

                            b1.ToTable("OdonPrev_Treatment");

                            b1.WithOwner()
                                .HasForeignKey("TreatmentId");
                        });

                    b.Navigation("Appointment");

                    b.Navigation("Cost")
                        .IsRequired();
                });

            modelBuilder.Entity("Challenge_Odontoprev_ADB.Models.Entities.Appointment", b =>
                {
                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("Challenge_Odontoprev_ADB.Models.Entities.Doctor", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Challenge_Odontoprev_ADB.Models.Entities.Patient", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
